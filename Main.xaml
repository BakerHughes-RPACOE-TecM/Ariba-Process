<Activity mc:Ignorable="sap sap2010 sads" x:Class="Main" mva:VisualBasic.Settings="{x:Null}" sap2010:WorkflowViewState.IdRef="Main_1"
 xmlns="http://schemas.microsoft.com/netfx/2009/xaml/activities"
 xmlns:av="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
 xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
 xmlns:mva="clr-namespace:Microsoft.VisualBasic.Activities;assembly=System.Activities"
 xmlns:s="clr-namespace:System;assembly=mscorlib"
 xmlns:sads="http://schemas.microsoft.com/netfx/2010/xaml/activities/debugger"
 xmlns:sap="http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation"
 xmlns:sap2010="http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation"
 xmlns:scg="clr-namespace:System.Collections.Generic;assembly=mscorlib"
 xmlns:sco="clr-namespace:System.Collections.ObjectModel;assembly=mscorlib"
 xmlns:ss="clr-namespace:System.Security;assembly=mscorlib"
 xmlns:ui="http://schemas.uipath.com/workflow/activities"
 xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
  <TextExpression.NamespacesForImplementation>
    <sco:Collection x:TypeArguments="x:String">
      <x:String>System.Activities</x:String>
      <x:String>System.Activities.Statements</x:String>
      <x:String>System.Activities.Expressions</x:String>
      <x:String>System.Activities.Validation</x:String>
      <x:String>System.Activities.XamlIntegration</x:String>
      <x:String>System.Windows.Controls</x:String>
      <x:String>System.Windows.Documents</x:String>
      <x:String>System.Windows.Shapes</x:String>
      <x:String>System.Windows.Shell</x:String>
      <x:String>System.Windows.Navigation</x:String>
      <x:String>System.Windows.Data</x:String>
      <x:String>System.Windows</x:String>
      <x:String>System.Windows.Controls.Primitives</x:String>
      <x:String>System.Windows.Media.Animation</x:String>
      <x:String>System.Windows.Input</x:String>
      <x:String>System.Windows.Media</x:String>
      <x:String>System.Diagnostics</x:String>
      <x:String>System.Windows.Media.Media3D</x:String>
      <x:String>System.Windows.Media.Imaging</x:String>
      <x:String>System.Windows.Automation</x:String>
      <x:String>System.Windows.Media.TextFormatting</x:String>
      <x:String>System.Windows.Ink</x:String>
      <x:String>System.Windows.Media.Effects</x:String>
      <x:String>System.Windows.Forms.Integration</x:String>
      <x:String>Microsoft.VisualBasic</x:String>
      <x:String>Microsoft.VisualBasic.Activities</x:String>
      <x:String>System</x:String>
      <x:String>System.Collections</x:String>
      <x:String>System.Collections.Generic</x:String>
      <x:String>System.Data</x:String>
      <x:String>System.Drawing</x:String>
      <x:String>System.IO</x:String>
      <x:String>System.Linq</x:String>
      <x:String>System.Net.Mail</x:String>
      <x:String>System.Xml</x:String>
      <x:String>System.Xml.Linq</x:String>
      <x:String>UiPath.Core</x:String>
      <x:String>UiPath.Core.Activities</x:String>
      <x:String>UiPath.Credentials.Activities</x:String>
      <x:String>UiPath.Database.Activities</x:String>
      <x:String>UiPath.Excel.Activities</x:String>
      <x:String>UiPath.CSV.Activities</x:String>
      <x:String>UiPath.Excel</x:String>
      <x:String>UiPath.CSV</x:String>
      <x:String>UiPath.FileSystem.Activities</x:String>
      <x:String>UiPath.FTP.Activities</x:String>
      <x:String>UiPath.Mail.Activities</x:String>
      <x:String>UiPath.Mail.Exchange.Activities</x:String>
      <x:String>UiPath.Mail.IMAP.Activities</x:String>
      <x:String>UiPath.Mail.Outlook.Activities</x:String>
      <x:String>UiPath.Mail.POP3.Activities</x:String>
      <x:String>UiPath.Mail.SMTP.Activities</x:String>
      <x:String>UiPath.PDF.Activities</x:String>
      <x:String>UiPath.XPS.Activities</x:String>
      <x:String>UiPath.Enterprise.Activities.Process</x:String>
      <x:String>UiPath.Script.Activities</x:String>
      <x:String>UiPath.Script.Activities.PowerShell</x:String>
      <x:String>UiPath.Script.Activities.AutoHotKey</x:String>
      <x:String>UiPath.Web</x:String>
      <x:String>UiPath.Web.Activities</x:String>
      <x:String>UiPath.JSON.Activities</x:String>
      <x:String>UiPath.REST.Activities</x:String>
      <x:String>UiPath.SOAP.Activities</x:String>
      <x:String>UiPath.XML.Activities</x:String>
      <x:String>System.Windows.Markup</x:String>
    </sco:Collection>
  </TextExpression.NamespacesForImplementation>
  <TextExpression.ReferencesForImplementation>
    <sco:Collection x:TypeArguments="AssemblyReference">
      <AssemblyReference>System.Activities</AssemblyReference>
      <AssemblyReference>PresentationFramework</AssemblyReference>
      <AssemblyReference>WindowsBase</AssemblyReference>
      <AssemblyReference>PresentationCore</AssemblyReference>
      <AssemblyReference>WindowsFormsIntegration</AssemblyReference>
      <AssemblyReference>Microsoft.VisualBasic</AssemblyReference>
      <AssemblyReference>mscorlib</AssemblyReference>
      <AssemblyReference>System.Data</AssemblyReference>
      <AssemblyReference>System</AssemblyReference>
      <AssemblyReference>System.Drawing</AssemblyReference>
      <AssemblyReference>System.Core</AssemblyReference>
      <AssemblyReference>System.Xml</AssemblyReference>
      <AssemblyReference>System.Xml.Linq</AssemblyReference>
      <AssemblyReference>UiPath.Credentials.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Database.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Excel.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Excel</AssemblyReference>
      <AssemblyReference>UiPath.FTP.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Mail.Activities</AssemblyReference>
      <AssemblyReference>UiPath.PDF.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Script.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Web</AssemblyReference>
      <AssemblyReference>UiPath.Web.Activities</AssemblyReference>
      <AssemblyReference>System.Xaml</AssemblyReference>
      <AssemblyReference>System.ComponentModel.Composition</AssemblyReference>
      <AssemblyReference>System.ServiceModel</AssemblyReference>
      <AssemblyReference>Microsoft.VisualStudio.Services.Common</AssemblyReference>
      <AssemblyReference>UiPath.IntelligentOCR</AssemblyReference>
      <AssemblyReference>UiPath.Python</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities</AssemblyReference>
      <AssemblyReference>UiPath.UiAutomation.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Studio.Plugin.Workflow</AssemblyReference>
      <AssemblyReference>UiPath.Mail</AssemblyReference>
      <AssemblyReference>UiPath.PDF</AssemblyReference>
      <AssemblyReference>System.ValueTuple</AssemblyReference>
      <AssemblyReference>UiPath.Java.Activities</AssemblyReference>
    </sco:Collection>
  </TextExpression.ReferencesForImplementation>
  <StateMachine sap2010:Annotation.AnnotationText="-- ReFrameWork - Robotic Enterprise Framework --&#xA;-- TEMPLATE--" DisplayName="General Business Process" sap2010:WorkflowViewState.IdRef="StateMachine_2">
    <StateMachine.InitialState>
      <State x:Name="__ReferenceID1" sap2010:Annotation.AnnotationText="Read Config, Init Applications" DisplayName="Init" sap2010:WorkflowViewState.IdRef="State_10">
        <State.Entry>
          <TryCatch DisplayName="Catch intialization exceptions" sap2010:WorkflowViewState.IdRef="TryCatch_10">
            <TryCatch.Try>
              <Sequence sap2010:WorkflowViewState.IdRef="Sequence_28">
                <Assign sap2010:WorkflowViewState.IdRef="Assign_37">
                  <Assign.To>
                    <OutArgument x:TypeArguments="s:Exception">[SystemError]</OutArgument>
                  </Assign.To>
                  <Assign.Value>
                    <InArgument x:TypeArguments="s:Exception">[Nothing]</InArgument>
                  </Assign.Value>
                </Assign>
                <If Condition="[Config is Nothing]" DisplayName="If first run - read Config file" sap2010:WorkflowViewState.IdRef="If_11">
                  <If.Then>
                    <Sequence sap2010:WorkflowViewState.IdRef="Sequence_27">
                      <ui:AddLogFields DisplayName="Add Machine Name Field" sap2010:WorkflowViewState.IdRef="AddLogFields_5">
                        <ui:AddLogFields.Fields>
                          <InArgument x:TypeArguments="x:String" x:Key="MachineName">[Environment.MachineName]</InArgument>
                        </ui:AddLogFields.Fields>
                      </ui:AddLogFields>
                      <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" DisplayName="Invoke InitAllSettings workflow" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_23" UnSafe="False" WorkflowFileName="Framework\InitAllSettings.xaml">
                        <ui:InvokeWorkflowFile.Arguments>
                          <InArgument x:TypeArguments="x:String" x:Key="in_ConfigFile">Data\Config.xlsx</InArgument>
                          <InArgument x:TypeArguments="s:String[]" x:Key="in_ConfigSheets">[{"Settings", "Constants"}]</InArgument>
                          <OutArgument x:TypeArguments="scg:Dictionary(x:String, x:Object)" x:Key="out_Config">[Config]</OutArgument>
                          <OutArgument x:TypeArguments="scg:Dictionary(x:String, ss:SecureString)" x:Key="out_Passwords">[Passwords]</OutArgument>
                        </ui:InvokeWorkflowFile.Arguments>
                      </ui:InvokeWorkflowFile>
                      <Assign DisplayName="Set process start time" sap2010:WorkflowViewState.IdRef="Assign_38">
                        <Assign.To>
                          <OutArgument x:TypeArguments="s:DateTime">[processStartTime]</OutArgument>
                        </Assign.To>
                        <Assign.Value>
                          <InArgument x:TypeArguments="s:DateTime">[DateTime.Now]</InArgument>
                        </Assign.Value>
                      </Assign>
                      <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" DisplayName="Log process started" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_25" UnSafe="False" WorkflowFileName="Framework\ProcessStartLog.xaml">
                        <ui:InvokeWorkflowFile.Arguments>
                          <InArgument x:TypeArguments="x:String" x:Key="ProcessName">[Config("ProjectName").ToString]</InArgument>
                          <InArgument x:TypeArguments="x:String" x:Key="ProcessStartTime">[processStartTime.ToString]</InArgument>
                          <InArgument x:TypeArguments="x:String" x:Key="ProjectId">[Config("ProjectId").ToString]</InArgument>
                        </ui:InvokeWorkflowFile.Arguments>
                      </ui:InvokeWorkflowFile>
                    </Sequence>
                  </If.Then>
                </If>
                <If Condition="[consecutiveExceptions &lt; Convert.ToInt32(Config(&quot;MaxExceptions&quot;).ToString)]" sap2010:WorkflowViewState.IdRef="If_28">
                  <If.Then>
                    <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" DisplayName="Invoke InitiAllApplications workflow" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_24" UnSafe="False" WorkflowFileName="Framework\InitAllApplications.xaml">
                      <ui:InvokeWorkflowFile.Arguments>
                        <InArgument x:TypeArguments="scg:Dictionary(x:String, x:Object)" x:Key="in_Config">[Config]</InArgument>
                        <InArgument x:TypeArguments="scg:Dictionary(x:String, ss:SecureString)" x:Key="in_Passwords">[Passwords]</InArgument>
                      </ui:InvokeWorkflowFile.Arguments>
                    </ui:InvokeWorkflowFile>
                  </If.Then>
                  <If.Else>
                    <Throw DisplayName="Throw - Too many errors" Exception="[new Exception(&quot;Maximum Application exceptions reached: &quot; + Config(&quot;MaxExceptions&quot;).ToString)]" sap2010:WorkflowViewState.IdRef="Throw_1" />
                  </If.Else>
                </If>
              </Sequence>
            </TryCatch.Try>
            <TryCatch.Catches>
              <Catch x:TypeArguments="s:Exception" sap2010:WorkflowViewState.IdRef="Catch`1_10">
                <ActivityAction x:TypeArguments="s:Exception">
                  <ActivityAction.Argument>
                    <DelegateInArgument x:TypeArguments="s:Exception" Name="exception" />
                  </ActivityAction.Argument>
                  <Sequence sap2010:WorkflowViewState.IdRef="Sequence_29">
                    <Assign sap2010:WorkflowViewState.IdRef="Assign_39">
                      <Assign.To>
                        <OutArgument x:TypeArguments="s:Exception">[SystemError]</OutArgument>
                      </Assign.To>
                      <Assign.Value>
                        <InArgument x:TypeArguments="s:Exception">[exception]</InArgument>
                      </Assign.Value>
                    </Assign>
                    <Assign DisplayName="Set processError to SystemError" sap2010:WorkflowViewState.IdRef="Assign_69">
                      <Assign.To>
                        <OutArgument x:TypeArguments="s:Exception">[processError]</OutArgument>
                      </Assign.To>
                      <Assign.Value>
                        <InArgument x:TypeArguments="s:Exception">[exception]</InArgument>
                      </Assign.Value>
                    </Assign>
                  </Sequence>
                </ActivityAction>
              </Catch>
            </TryCatch.Catches>
          </TryCatch>
        </State.Entry>
        <State.Transitions>
          <Transition DisplayName="System Error" sap2010:WorkflowViewState.IdRef="Transition_10">
            <Transition.To>
              <State x:Name="__ReferenceID2" sap2010:Annotation.AnnotationText="Process stops here" DisplayName="End Process" sap2010:WorkflowViewState.IdRef="State_6" IsFinal="True">
                <State.Entry>
                  <TryCatch sap2010:WorkflowViewState.IdRef="TryCatch_11">
                    <TryCatch.Try>
                      <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" DisplayName="Invoke CloseAllApplications workflow" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_26" UnSafe="False" WorkflowFileName="Framework\CloseAllApplications.xaml">
                        <ui:InvokeWorkflowFile.Arguments>
                          <scg:Dictionary x:TypeArguments="x:String, Argument" />
                        </ui:InvokeWorkflowFile.Arguments>
                      </ui:InvokeWorkflowFile>
                    </TryCatch.Try>
                    <TryCatch.Catches>
                      <Catch x:TypeArguments="s:Exception" sap2010:WorkflowViewState.IdRef="Catch`1_11">
                        <ActivityAction x:TypeArguments="s:Exception">
                          <ActivityAction.Argument>
                            <DelegateInArgument x:TypeArguments="s:Exception" Name="exception" />
                          </ActivityAction.Argument>
                          <Sequence sap2010:WorkflowViewState.IdRef="Sequence_30">
                            <ui:LogMessage DisplayName="Log message" sap2010:WorkflowViewState.IdRef="LogMessage_30" Level="Warn" Message="[&quot;Applications failed to close normally. &quot;+exception.Message+&quot; at Source: &quot;+exception.Source]" />
                            <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" DisplayName="Invoke KillAllProcesses workflow" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_27" UnSafe="False" WorkflowFileName="Framework\KillAllProcesses.xaml">
                              <ui:InvokeWorkflowFile.Arguments>
                                <InArgument x:TypeArguments="s:String[]" x:Key="in_ProcessList">[defaultKillList]</InArgument>
                              </ui:InvokeWorkflowFile.Arguments>
                            </ui:InvokeWorkflowFile>
                          </Sequence>
                        </ActivityAction>
                      </Catch>
                    </TryCatch.Catches>
                    <TryCatch.Finally>
                      <Sequence sap2010:WorkflowViewState.IdRef="Sequence_47">
                        <If Condition="[processError IsNot Nothing]" DisplayName="If - Exception to report?" sap2010:WorkflowViewState.IdRef="If_15">
                          <If.Then>
                            <Sequence sap2010:WorkflowViewState.IdRef="Sequence_58">
                              <Assign DisplayName="Assign - Default Application Type" sap2010:WorkflowViewState.IdRef="Assign_87">
                                <Assign.To>
                                  <OutArgument x:TypeArguments="x:String">[exceptionType]</OutArgument>
                                </Assign.To>
                                <Assign.Value>
                                  <InArgument x:TypeArguments="x:String">Application</InArgument>
                                </Assign.Value>
                              </Assign>
                              <If Condition="[processError.GetType = GetType(UiPath.Core.BusinessRuleException)]" DisplayName="If - Is it a business Exception?" sap2010:WorkflowViewState.IdRef="If_27">
                                <If.Then>
                                  <Sequence sap2010:WorkflowViewState.IdRef="Sequence_66">
                                    <Sequence sap2010:WorkflowViewState.IdRef="Sequence_60">
                                      <Assign DisplayName="Assign Default Business to Functional" sap2010:WorkflowViewState.IdRef="Assign_86">
                                        <Assign.To>
                                          <OutArgument x:TypeArguments="x:String">[exceptionType]</OutArgument>
                                        </Assign.To>
                                        <Assign.Value>
                                          <InArgument x:TypeArguments="x:String">Functional</InArgument>
                                        </Assign.Value>
                                      </Assign>
                                      <Sequence sap2010:WorkflowViewState.IdRef="Sequence_59">
                                        <If Condition="[processError.InnerException IsNot Nothing]" DisplayName="If - Does InnerException Exist" sap2010:WorkflowViewState.IdRef="If_16">
                                          <If.Then>
                                            <If Condition="[processError.InnerException.Message = &quot;Functional&quot; OR processError.InnerException.Message = &quot;Operational&quot;]" DisplayName="If - Is InnerException valid" sap2010:WorkflowViewState.IdRef="If_26">
                                              <If.Then>
                                                <Assign DisplayName="Assign - Get Business InnerException" sap2010:WorkflowViewState.IdRef="Assign_85">
                                                  <Assign.To>
                                                    <OutArgument x:TypeArguments="x:String">[exceptionType]</OutArgument>
                                                  </Assign.To>
                                                  <Assign.Value>
                                                    <InArgument x:TypeArguments="x:String">[processError.InnerException.Message]</InArgument>
                                                  </Assign.Value>
                                                </Assign>
                                              </If.Then>
                                            </If>
                                          </If.Then>
                                        </If>
                                      </Sequence>
                                    </Sequence>
                                    <Assign sap2010:Annotation.AnnotationText="By default, we do not want to report a BusinessRuleException, so empty this out to avoid creating a ticket." DisplayName="Do not report BusinessRuleException at Process Level" sap2010:WorkflowViewState.IdRef="Assign_97">
                                      <Assign.To>
                                        <OutArgument x:TypeArguments="s:Exception">[processError]</OutArgument>
                                      </Assign.To>
                                      <Assign.Value>
                                        <InArgument x:TypeArguments="s:Exception">[Nothing]</InArgument>
                                      </Assign.Value>
                                    </Assign>
                                  </Sequence>
                                </If.Then>
                              </If>
                            </Sequence>
                          </If.Then>
                        </If>
                        <If Condition="[Config IsNot Nothing]" sap2010:WorkflowViewState.IdRef="If_29">
                          <If.Then>
                            <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" DisplayName="Log process finished" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_28" UnSafe="False" WorkflowFileName="Framework\ProcessFinished.xaml">
                              <ui:InvokeWorkflowFile.Arguments>
                                <InArgument x:TypeArguments="x:String" x:Key="ProcessName">[Config("ProjectName").ToString]</InArgument>
                                <InArgument x:TypeArguments="s:Exception" x:Key="ProcessError">[processError]</InArgument>
                                <InArgument x:TypeArguments="x:String" x:Key="ProcessSummary">[processSummary]</InArgument>
                                <InArgument x:TypeArguments="x:String" x:Key="ProcessStartTime">[processStartTime.ToString]</InArgument>
                                <InArgument x:TypeArguments="x:String" x:Key="ProjectId">[Config("ProjectId").ToString]</InArgument>
                                <InArgument x:TypeArguments="x:String" x:Key="ExceptionType">[exceptionType]</InArgument>
                              </ui:InvokeWorkflowFile.Arguments>
                            </ui:InvokeWorkflowFile>
                          </If.Then>
                        </If>
                      </Sequence>
                    </TryCatch.Finally>
                  </TryCatch>
                </State.Entry>
              </State>
            </Transition.To>
            <Transition.Action>
              <ui:LogMessage DisplayName="Log Message" sap2010:WorkflowViewState.IdRef="LogMessage_31" Level="Error" Message="[&quot;System error at initialization: &quot; + SystemError.Message]" />
            </Transition.Action>
            <Transition.Condition>[SystemError isNot Nothing]</Transition.Condition>
          </Transition>
          <Transition DisplayName="Success" sap2010:WorkflowViewState.IdRef="Transition_18">
            <Transition.To>
              <State x:Name="__ReferenceID0" sap2010:Annotation.AnnotationText="Get next transaction input data" DisplayName="Get Transaction Data" sap2010:WorkflowViewState.IdRef="State_8">
                <State.Entry>
                  <Sequence sap2010:Annotation.AnnotationText="Data retrieval mechanism. The TransactionNumber variable holds the current transaction number. Incrementing this number means getting the next transaction. For a robot retry, the number is not increased, in case of application exception, until the max retry number.&#xA;TransactionItem type needs to be changed accordingly." DisplayName="Retrieve Data" sap2010:WorkflowViewState.IdRef="Sequence_38">
                    <ui:ShouldStop DisplayName="Check Stop Signal" sap2010:WorkflowViewState.IdRef="ShouldStop_4" Result="[ShouldStop]" />
                    <If Condition="[RetryNumber = 0]" DisplayName="If not retrying" sap2010:WorkflowViewState.IdRef="If_34">
                      <If.Then>
                        <If Condition="[ShouldStop]" DisplayName="Should Stop or Get Next" sap2010:WorkflowViewState.IdRef="If_14">
                          <If.Then>
                            <Sequence DisplayName="Should Stop Sequence">
                              <ui:LogMessage DisplayName="Log Stop message" sap2010:WorkflowViewState.IdRef="LogMessage_35" Level="Info" Message="[&quot;Stop process requested&quot;]" />
                              <Assign DisplayName="Assign TransactionItem to Nothing">
                                <Assign.To>
                                  <OutArgument x:TypeArguments="ui:QueueItem">[TransactionItem]</OutArgument>
                                </Assign.To>
                                <Assign.Value>
                                  <InArgument x:TypeArguments="ui:QueueItem">[Nothing]</InArgument>
                                </Assign.Value>
                                <sap2010:WorkflowViewState.IdRef>Assign_108</sap2010:WorkflowViewState.IdRef>
                              </Assign>
                              <sap2010:WorkflowViewState.IdRef>Sequence_83</sap2010:WorkflowViewState.IdRef>
                            </Sequence>
                          </If.Then>
                          <If.Else>
                            <TryCatch DisplayName="Try GetTransactionData" sap2010:WorkflowViewState.IdRef="TryCatch_13">
                              <TryCatch.Try>
                                <Sequence sap2010:WorkflowViewState.IdRef="Sequence_36">
                                  <Assign sap2010:WorkflowViewState.IdRef="Assign_60">
                                    <Assign.To>
                                      <OutArgument x:TypeArguments="s:Exception">[QueueError]</OutArgument>
                                    </Assign.To>
                                    <Assign.Value>
                                      <InArgument x:TypeArguments="s:Exception">[Nothing]</InArgument>
                                    </Assign.Value>
                                  </Assign>
                                  <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" DisplayName="Invoke GetTransactionData workflow" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_30" UnSafe="False" WorkflowFileName="Framework\GetTransactionData.xaml">
                                    <ui:InvokeWorkflowFile.Arguments>
                                      <InArgument x:TypeArguments="x:Int32" x:Key="in_TransactionNumber">[TransactionNumber]</InArgument>
                                      <InArgument x:TypeArguments="scg:Dictionary(x:String, x:Object)" x:Key="in_Config">[Config]</InArgument>
                                      <OutArgument x:TypeArguments="ui:QueueItem" x:Key="out_TransactionItem">[TransactionItem]</OutArgument>
                                      <InArgument x:TypeArguments="scg:Dictionary(x:String, ss:SecureString)" x:Key="in_Passwords">[Passwords]</InArgument>
                                    </ui:InvokeWorkflowFile.Arguments>
                                  </ui:InvokeWorkflowFile>
                                </Sequence>
                              </TryCatch.Try>
                              <TryCatch.Catches>
                                <Catch x:TypeArguments="s:Exception" sap2010:WorkflowViewState.IdRef="Catch`1_13">
                                  <ActivityAction x:TypeArguments="s:Exception">
                                    <ActivityAction.Argument>
                                      <DelegateInArgument x:TypeArguments="s:Exception" Name="exception" />
                                    </ActivityAction.Argument>
                                    <Sequence sap2010:WorkflowViewState.IdRef="Sequence_37">
                                      <ui:LogMessage DisplayName="Log message" sap2010:WorkflowViewState.IdRef="LogMessage_36" Level="Error" Message="[Config(&quot;LogMessage_GetTransactionDataError&quot;).ToString+TransactionNumber.ToString+&quot;. &quot;+exception.Message+&quot; at Source: &quot;+exception.Source]" />
                                      <Assign sap2010:WorkflowViewState.IdRef="Assign_42">
                                        <Assign.To>
                                          <OutArgument x:TypeArguments="ui:QueueItem">[TransactionItem]</OutArgument>
                                        </Assign.To>
                                        <Assign.Value>
                                          <InArgument x:TypeArguments="ui:QueueItem">[Nothing]</InArgument>
                                        </Assign.Value>
                                      </Assign>
                                    </Sequence>
                                  </ActivityAction>
                                </Catch>
                              </TryCatch.Catches>
                            </TryCatch>
                          </If.Else>
                        </If>
                      </If.Then>
                    </If>
                  </Sequence>
                </State.Entry>
                <State.Transitions>
                  <Transition DisplayName="New Transaction" sap2010:WorkflowViewState.IdRef="Transition_14">
                    <Transition.To>
                      <State x:Name="__ReferenceID3" sap2010:Annotation.AnnotationText="A transaction either succeeds or fails with a Business Rule Exception or a System Error. For System Error, it can be retried." DisplayName="Process Transaction" sap2010:WorkflowViewState.IdRef="State_7">
                        <State.Entry>
                          <TryCatch DisplayName="Process Transaction" sap2010:WorkflowViewState.IdRef="TryCatch_14">
                            <TryCatch.Try>
                              <Sequence DisplayName="Process the current TransactionItem" sap2010:WorkflowViewState.IdRef="Sequence_40">
                                <Sequence DisplayName="Log transaction started" sap2010:WorkflowViewState.IdRef="Sequence_39">
                                  <Assign DisplayName="Generate transaction ID" sap2010:WorkflowViewState.IdRef="Assign_43">
                                    <Assign.To>
                                      <OutArgument x:TypeArguments="x:String">[transactionId]</OutArgument>
                                    </Assign.To>
                                    <Assign.Value>
                                      <InArgument x:TypeArguments="x:String">Put transaction ID here</InArgument>
                                    </Assign.Value>
                                  </Assign>
                                  <Assign DisplayName="Set transaction name" sap2010:WorkflowViewState.IdRef="Assign_44">
                                    <Assign.To>
                                      <OutArgument x:TypeArguments="x:String">[transactionName]</OutArgument>
                                    </Assign.To>
                                    <Assign.Value>
                                      <InArgument x:TypeArguments="x:String">[Config("TransactionName").ToString]</InArgument>
                                    </Assign.Value>
                                  </Assign>
                                  <Assign DisplayName="Set transaction start time" sap2010:WorkflowViewState.IdRef="Assign_45">
                                    <Assign.To>
                                      <OutArgument x:TypeArguments="s:DateTime">[transactionStartTime]</OutArgument>
                                    </Assign.To>
                                    <Assign.Value>
                                      <InArgument x:TypeArguments="s:DateTime">[DateTime.Now]</InArgument>
                                    </Assign.Value>
                                  </Assign>
                                  <Assign DisplayName="Reset transaction Error" sap2010:WorkflowViewState.IdRef="Assign_96">
                                    <Assign.To>
                                      <OutArgument x:TypeArguments="s:Exception">[transactionError]</OutArgument>
                                    </Assign.To>
                                    <Assign.Value>
                                      <InArgument x:TypeArguments="s:Exception">[Nothing]</InArgument>
                                    </Assign.Value>
                                  </Assign>
                                  <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" DisplayName="Log tranasaction started" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_31" UnSafe="False" WorkflowFileName="Framework\TransactionStartLog.xaml">
                                    <ui:InvokeWorkflowFile.Arguments>
                                      <InArgument x:TypeArguments="x:String" x:Key="TransactionID">[transactionId.ToString]</InArgument>
                                      <InArgument x:TypeArguments="x:String" x:Key="TransactionName">[transactionName]</InArgument>
                                      <InArgument x:TypeArguments="x:String" x:Key="TransactionStartTime">[transactionStartTime.ToString]</InArgument>
                                      <InArgument x:TypeArguments="x:String" x:Key="ProjectId">[Config("ProjectId").ToString]</InArgument>
                                      <InArgument x:TypeArguments="x:String" x:Key="ProjectName">[Config("ProjectName").ToString]</InArgument>
                                    </ui:InvokeWorkflowFile.Arguments>
                                  </ui:InvokeWorkflowFile>
                                </Sequence>
                                <Assign DisplayName="Assign - Reset BusinessRuleException" sap2010:WorkflowViewState.IdRef="Assign_46">
                                  <Assign.To>
                                    <OutArgument x:TypeArguments="ui:BusinessRuleException">[BusinessRuleException]</OutArgument>
                                  </Assign.To>
                                  <Assign.Value>
                                    <InArgument x:TypeArguments="ui:BusinessRuleException">[Nothing]</InArgument>
                                  </Assign.Value>
                                </Assign>
                                <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" DisplayName="Invoke ProcessTransaction workflow" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_32" UnSafe="False" WorkflowFileName="Process.xaml">
                                  <ui:InvokeWorkflowFile.Arguments>
                                    <InArgument x:TypeArguments="ui:QueueItem" x:Key="in_TransactionItem">[TransactionItem]</InArgument>
                                    <InArgument x:TypeArguments="scg:Dictionary(x:String, x:Object)" x:Key="in_Config">[Config]</InArgument>
                                    <InArgument x:TypeArguments="scg:Dictionary(x:String, ss:SecureString)" x:Key="in_Passwords">[Passwords]</InArgument>
                                  </ui:InvokeWorkflowFile.Arguments>
                                </ui:InvokeWorkflowFile>
                                <Assign DisplayName="Assign - consecutiveExceptions = 0" sap2010:WorkflowViewState.IdRef="Assign_88">
                                  <Assign.To>
                                    <OutArgument x:TypeArguments="x:Int32">[consecutiveExceptions]</OutArgument>
                                  </Assign.To>
                                  <Assign.Value>
                                    <InArgument x:TypeArguments="x:Int32">0</InArgument>
                                  </Assign.Value>
                                </Assign>
                              </Sequence>
                            </TryCatch.Try>
                            <TryCatch.Catches>
                              <Catch x:TypeArguments="ui:BusinessRuleException" sap2010:WorkflowViewState.IdRef="Catch`1_14">
                                <ActivityAction x:TypeArguments="ui:BusinessRuleException">
                                  <ActivityAction.Argument>
                                    <DelegateInArgument x:TypeArguments="ui:BusinessRuleException" Name="exception" />
                                  </ActivityAction.Argument>
                                  <Sequence sap2010:WorkflowViewState.IdRef="Sequence_49">
                                    <Assign DisplayName="Set transaction status to Rule Exception" sap2010:WorkflowViewState.IdRef="Assign_47">
                                      <Assign.To>
                                        <OutArgument x:TypeArguments="ui:BusinessRuleException">[BusinessRuleException]</OutArgument>
                                      </Assign.To>
                                      <Assign.Value>
                                        <InArgument x:TypeArguments="ui:BusinessRuleException">[exception]</InArgument>
                                      </Assign.Value>
                                    </Assign>
                                    <Assign DisplayName="Set processError to BusinessRuleException" sap2010:WorkflowViewState.IdRef="Assign_91">
                                      <Assign.To>
                                        <OutArgument x:TypeArguments="s:Exception">[processError]</OutArgument>
                                      </Assign.To>
                                      <Assign.Value>
                                        <InArgument x:TypeArguments="s:Exception">[BusinessRuleException]</InArgument>
                                      </Assign.Value>
                                    </Assign>
                                    <Assign sap2010:WorkflowViewState.IdRef="Assign_66">
                                      <Assign.To>
                                        <OutArgument x:TypeArguments="s:Exception">[transactionError]</OutArgument>
                                      </Assign.To>
                                      <Assign.Value>
                                        <InArgument x:TypeArguments="s:Exception">[exception]</InArgument>
                                      </Assign.Value>
                                    </Assign>
                                  </Sequence>
                                </ActivityAction>
                              </Catch>
                              <Catch x:TypeArguments="s:Exception" sap2010:WorkflowViewState.IdRef="Catch`1_15">
                                <ActivityAction x:TypeArguments="s:Exception">
                                  <ActivityAction.Argument>
                                    <DelegateInArgument x:TypeArguments="s:Exception" Name="exception" />
                                  </ActivityAction.Argument>
                                  <Sequence sap2010:WorkflowViewState.IdRef="Sequence_50">
                                    <Assign DisplayName="Set transaction status to SystemError" sap2010:WorkflowViewState.IdRef="Assign_48">
                                      <Assign.To>
                                        <OutArgument x:TypeArguments="s:Exception">[SystemError]</OutArgument>
                                      </Assign.To>
                                      <Assign.Value>
                                        <InArgument x:TypeArguments="s:Exception">[exception]</InArgument>
                                      </Assign.Value>
                                    </Assign>
                                    <Assign DisplayName="Set processError to SystemError" sap2010:WorkflowViewState.IdRef="Assign_92">
                                      <Assign.To>
                                        <OutArgument x:TypeArguments="s:Exception">[processError]</OutArgument>
                                      </Assign.To>
                                      <Assign.Value>
                                        <InArgument x:TypeArguments="s:Exception">[exception]</InArgument>
                                      </Assign.Value>
                                    </Assign>
                                    <Assign DisplayName="Set transactionError to SystemError" sap2010:WorkflowViewState.IdRef="Assign_67">
                                      <Assign.To>
                                        <OutArgument x:TypeArguments="s:Exception">[transactionError]</OutArgument>
                                      </Assign.To>
                                      <Assign.Value>
                                        <InArgument x:TypeArguments="s:Exception">[exception]</InArgument>
                                      </Assign.Value>
                                    </Assign>
                                    <Assign DisplayName="Assign - consecutiveExceptions += 1" sap2010:WorkflowViewState.IdRef="Assign_89">
                                      <Assign.To>
                                        <OutArgument x:TypeArguments="x:Int32">[consecutiveExceptions]</OutArgument>
                                      </Assign.To>
                                      <Assign.Value>
                                        <InArgument x:TypeArguments="x:Int32">[consecutiveExceptions + 1]</InArgument>
                                      </Assign.Value>
                                    </Assign>
                                  </Sequence>
                                </ActivityAction>
                              </Catch>
                            </TryCatch.Catches>
                            <TryCatch.Finally>
                              <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" DisplayName="Log transaction finished" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_33" UnSafe="False" WorkflowFileName="Framework\TransactionFinishLog.xaml">
                                <ui:InvokeWorkflowFile.Arguments>
                                  <InArgument x:TypeArguments="x:String" x:Key="TransactionID">[transactionId.ToString]</InArgument>
                                  <InArgument x:TypeArguments="x:String" x:Key="TransactionName">[transactionName]</InArgument>
                                  <InArgument x:TypeArguments="x:String" x:Key="TransactionStartTime">[transactionStartTime.ToString]</InArgument>
                                  <InArgument x:TypeArguments="s:Exception" x:Key="TransactionError">[transactionError]</InArgument>
                                  <InArgument x:TypeArguments="x:String" x:Key="ProjectId">[Config("ProjectId").ToString]</InArgument>
                                  <InArgument x:TypeArguments="x:String" x:Key="ProjectName">[Config("ProjectName").ToString]</InArgument>
                                  <InArgument x:TypeArguments="x:String" x:Key="Trans_Count">[TransactionNumber.ToString]</InArgument>
                                </ui:InvokeWorkflowFile.Arguments>
                              </ui:InvokeWorkflowFile>
                            </TryCatch.Finally>
                          </TryCatch>
                        </State.Entry>
                        <State.Transitions>
                          <Transition DisplayName="Rule Exception" sap2010:WorkflowViewState.IdRef="Transition_11" To="{x:Reference __ReferenceID0}">
                            <Transition.Action>
                              <Sequence sap2010:Annotation.AnnotationText="This transition is executed if a business rule exception occurred." DisplayName="Handle Business Rule Exception" sap2010:WorkflowViewState.IdRef="Sequence_41">
                                <ui:RetryScope sap2010:Annotation.AnnotationText="Set Transaction status Activity timeout increased to 60 sec and it will be retried three times" DisplayName="Retry Scope" sap2010:WorkflowViewState.IdRef="RetryScope_1" NumberOfRetries="3" RetryInterval="00:00:05">
                                  <ui:RetryScope.ActivityBody>
                                    <ActivityAction>
                                      <Sequence DisplayName="Action" sap2010:WorkflowViewState.IdRef="Sequence_77">
                                        <ui:SetTransactionStatus ContinueOnError="{x:Null}" ServiceBaseAddress="{x:Null}" sap2010:Annotation.AnnotationText="Business exception" DisplayName="Set transaction status" ErrorType="Business" sap2010:WorkflowViewState.IdRef="SetTransactionStatus_4" Reason="[BusinessRuleException.Message]" Status="Failed" TimeoutMS="60000" TransactionItem="[TransactionItem]">
                                          <ui:SetTransactionStatus.Output>
                                            <scg:Dictionary x:TypeArguments="x:String, InArgument" />
                                          </ui:SetTransactionStatus.Output>
                                        </ui:SetTransactionStatus>
                                      </Sequence>
                                    </ActivityAction>
                                  </ui:RetryScope.ActivityBody>
                                  <ui:RetryScope.Condition>
                                    <ActivityFunc x:TypeArguments="x:Boolean" />
                                  </ui:RetryScope.Condition>
                                </ui:RetryScope>
                                <ui:LogMessage DisplayName="Log Message" sap2010:WorkflowViewState.IdRef="LogMessage_37" Level="Warn" Message="[Config(&quot;LogMessage_BusinessRuleException&quot;).ToString + BusinessRuleException.Message]" />
                                <Assign sap2010:WorkflowViewState.IdRef="Assign_49">
                                  <Assign.To>
                                    <OutArgument x:TypeArguments="x:Int32">[TransactionNumber]</OutArgument>
                                  </Assign.To>
                                  <Assign.Value>
                                    <InArgument x:TypeArguments="x:Int32">[TransactionNumber+1]</InArgument>
                                  </Assign.Value>
                                </Assign>
                                <Assign sap2010:WorkflowViewState.IdRef="Assign_50">
                                  <Assign.To>
                                    <OutArgument x:TypeArguments="x:Int32">[RetryNumber]</OutArgument>
                                  </Assign.To>
                                  <Assign.Value>
                                    <InArgument x:TypeArguments="x:Int32">0</InArgument>
                                  </Assign.Value>
                                </Assign>
                              </Sequence>
                            </Transition.Action>
                            <Transition.Condition>[BusinessRuleException IsNot Nothing]</Transition.Condition>
                          </Transition>
                          <Transition DisplayName="Application Exception" sap2010:WorkflowViewState.IdRef="Transition_13" To="{x:Reference __ReferenceID1}">
                            <Transition.Action>
                              <Sequence sap2010:Annotation.AnnotationText="This transition is executed if a system error occurred." DisplayName="Handle System Error" sap2010:WorkflowViewState.IdRef="Sequence_44">
                                <ui:RetryScope sap2010:Annotation.AnnotationText="Set Transaction status Activity timeout increased to 60 sec and it will be retried three times" DisplayName="Retry Scope" sap2010:WorkflowViewState.IdRef="RetryScope_2" NumberOfRetries="3" RetryInterval="00:00:05">
                                  <ui:RetryScope.ActivityBody>
                                    <ActivityAction>
                                      <Sequence DisplayName="Action" sap2010:WorkflowViewState.IdRef="Sequence_78">
                                        <ui:SetTransactionStatus ContinueOnError="{x:Null}" ServiceBaseAddress="{x:Null}" sap2010:Annotation.AnnotationText="System exception" DisplayName="Set transaction status" ErrorType="Application" sap2010:WorkflowViewState.IdRef="SetTransactionStatus_6" Reason="[SystemError.Message]" Status="Failed" TimeoutMS="60000" TransactionItem="[TransactionItem]">
                                          <ui:SetTransactionStatus.Output>
                                            <scg:Dictionary x:TypeArguments="x:String, InArgument" />
                                          </ui:SetTransactionStatus.Output>
                                        </ui:SetTransactionStatus>
                                      </Sequence>
                                    </ActivityAction>
                                  </ui:RetryScope.ActivityBody>
                                  <ui:RetryScope.Condition>
                                    <ActivityFunc x:TypeArguments="x:Boolean" />
                                  </ui:RetryScope.Condition>
                                </ui:RetryScope>
                                <ui:Comment sap2010:WorkflowViewState.IdRef="Comment_3" Text="If using queues, it's strongly recommended to use the automatic retry feature of the queue rather than the retry function in the framework. If you are using automatic retry, make sure MaxRetryNumber is set to 0 in your Config.xlsx so that the below retry functionality is skipped." />
                                <If Condition="[cint(Config(&quot;MaxRetryNumber&quot;))&gt;0]" DisplayName="If retry is enabled" sap2010:WorkflowViewState.IdRef="If_33">
                                  <If.Then>
                                    <If Condition="[RetryNumber&gt;=cint(Config(&quot;MaxRetryNumber&quot;))]" DisplayName="If nax retries reached" sap2010:WorkflowViewState.IdRef="If_32">
                                      <If.Then>
                                        <Sequence sap2010:WorkflowViewState.IdRef="Sequence_80">
                                          <ui:LogMessage DisplayName="Log error max retry reached" sap2010:WorkflowViewState.IdRef="LogMessage_55" Level="Error" Message="[Config(&quot;LogMessage_ApplicationException&quot;).ToString+&quot; Max number of retries reached. &quot;+SystemError.Message+&quot; at Source: &quot;+SystemError.Source]" />
                                          <Assign DisplayName="Increment TransactionNumber" sap2010:WorkflowViewState.IdRef="Assign_102">
                                            <Assign.To>
                                              <OutArgument x:TypeArguments="x:Int32">[TransactionNumber]</OutArgument>
                                            </Assign.To>
                                            <Assign.Value>
                                              <InArgument x:TypeArguments="x:Int32">[TransactionNumber+1]</InArgument>
                                            </Assign.Value>
                                          </Assign>
                                          <Assign sap2010:WorkflowViewState.IdRef="Assign_103">
                                            <Assign.To>
                                              <OutArgument x:TypeArguments="x:Int32">[RetryNumber]</OutArgument>
                                            </Assign.To>
                                            <Assign.Value>
                                              <InArgument x:TypeArguments="x:Int32">0</InArgument>
                                            </Assign.Value>
                                          </Assign>
                                          <Assign DisplayName="Set processError to SystemError" sap2010:WorkflowViewState.IdRef="Assign_104">
                                            <Assign.To>
                                              <OutArgument x:TypeArguments="s:Exception">[processError]</OutArgument>
                                            </Assign.To>
                                            <Assign.Value>
                                              <InArgument x:TypeArguments="s:Exception">[SystemError]</InArgument>
                                            </Assign.Value>
                                          </Assign>
                                        </Sequence>
                                      </If.Then>
                                      <If.Else>
                                        <Sequence sap2010:WorkflowViewState.IdRef="Sequence_81">
                                          <Assign sap2010:WorkflowViewState.IdRef="Assign_105">
                                            <Assign.To>
                                              <OutArgument x:TypeArguments="x:Int32">[RetryNumber]</OutArgument>
                                            </Assign.To>
                                            <Assign.Value>
                                              <InArgument x:TypeArguments="x:Int32">[RetryNumber+1]</InArgument>
                                            </Assign.Value>
                                          </Assign>
                                          <ui:LogMessage DisplayName="Log warn Retry Transaction" sap2010:WorkflowViewState.IdRef="LogMessage_56" Level="Warn" Message="[Config(&quot;LogMessage_ApplicationException&quot;).ToString+&quot; Retry: &quot;+RetryNumber.ToString+&quot;. &quot;+SystemError.Message+&quot; at Source: &quot;+SystemError.Source]" />
                                        </Sequence>
                                      </If.Else>
                                    </If>
                                  </If.Then>
                                  <If.Else>
                                    <Sequence sap2010:WorkflowViewState.IdRef="Sequence_82">
                                      <ui:LogMessage DisplayName="Log error No retry" sap2010:WorkflowViewState.IdRef="LogMessage_57" Level="Error" Message="[Config(&quot;LogMessage_ApplicationException&quot;).ToString+SystemError.Message+&quot; at Source: &quot;+SystemError.Source]" />
                                      <Assign DisplayName="Increment TransactionNumber" sap2010:WorkflowViewState.IdRef="Assign_106">
                                        <Assign.To>
                                          <OutArgument x:TypeArguments="x:Int32">[TransactionNumber]</OutArgument>
                                        </Assign.To>
                                        <Assign.Value>
                                          <InArgument x:TypeArguments="x:Int32">[TransactionNumber+1]</InArgument>
                                        </Assign.Value>
                                      </Assign>
                                      <Assign DisplayName="Set processError to SystemError" sap2010:WorkflowViewState.IdRef="Assign_107">
                                        <Assign.To>
                                          <OutArgument x:TypeArguments="s:Exception">[processError]</OutArgument>
                                        </Assign.To>
                                        <Assign.Value>
                                          <InArgument x:TypeArguments="s:Exception">[SystemError]</InArgument>
                                        </Assign.Value>
                                      </Assign>
                                    </Sequence>
                                  </If.Else>
                                </If>
                                <TryCatch DisplayName="Try catch - TakeScreenshot" sap2010:WorkflowViewState.IdRef="TryCatch_15">
                                  <TryCatch.Try>
                                    <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" DisplayName="Invoke TakeScreenshot workflow" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_34" UnSafe="False" WorkflowFileName="Framework\TakeScreenshot.xaml">
                                      <ui:InvokeWorkflowFile.Arguments>
                                        <InArgument x:TypeArguments="x:String" x:Key="in_Folder">[Config("ExScreenshotsFolderPath").ToString]</InArgument>
                                        <InOutArgument x:TypeArguments="x:String" x:Key="io_FilePath" />
                                      </ui:InvokeWorkflowFile.Arguments>
                                    </ui:InvokeWorkflowFile>
                                  </TryCatch.Try>
                                  <TryCatch.Catches>
                                    <Catch x:TypeArguments="s:Exception" sap2010:WorkflowViewState.IdRef="Catch`1_16">
                                      <ActivityAction x:TypeArguments="s:Exception">
                                        <ActivityAction.Argument>
                                          <DelegateInArgument x:TypeArguments="s:Exception" Name="exception" />
                                        </ActivityAction.Argument>
                                        <ui:LogMessage DisplayName="Log message" sap2010:WorkflowViewState.IdRef="LogMessage_42" Level="Warn" Message="[&quot;Take screenshot failed with error: &quot;+exception.Message+&quot; at Source: &quot;+exception.Source]" />
                                      </ActivityAction>
                                    </Catch>
                                  </TryCatch.Catches>
                                </TryCatch>
                                <TryCatch DisplayName="Try catch CloseAllApplications" sap2010:WorkflowViewState.IdRef="TryCatch_17">
                                  <TryCatch.Try>
                                    <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" DisplayName="Invoke CloseAllApplications workflow" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_35" UnSafe="False" WorkflowFileName="Framework\CloseAllApplications.xaml">
                                      <ui:InvokeWorkflowFile.Arguments>
                                        <scg:Dictionary x:TypeArguments="x:String, Argument" />
                                      </ui:InvokeWorkflowFile.Arguments>
                                    </ui:InvokeWorkflowFile>
                                  </TryCatch.Try>
                                  <TryCatch.Catches>
                                    <Catch x:TypeArguments="s:Exception" sap2010:WorkflowViewState.IdRef="Catch`1_18">
                                      <ActivityAction x:TypeArguments="s:Exception">
                                        <ActivityAction.Argument>
                                          <DelegateInArgument x:TypeArguments="s:Exception" Name="exception" />
                                        </ActivityAction.Argument>
                                        <Sequence sap2010:WorkflowViewState.IdRef="Sequence_43">
                                          <ui:LogMessage DisplayName="Log message" sap2010:WorkflowViewState.IdRef="LogMessage_43" Level="Warn" Message="[&quot;CloseAllApplications failed. &quot;+exception.Message+&quot; at Source: &quot;+exception.Source]" />
                                          <TryCatch DisplayName="Try catch KillAllProcesses" sap2010:WorkflowViewState.IdRef="TryCatch_16">
                                            <TryCatch.Try>
                                              <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" DisplayName="Invoke KillAllProcesses workflow" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_36" UnSafe="False" WorkflowFileName="Framework\KillAllProcesses.xaml">
                                                <ui:InvokeWorkflowFile.Arguments>
                                                  <InArgument x:TypeArguments="s:String[]" x:Key="in_ProcessList">[defaultKillList]</InArgument>
                                                </ui:InvokeWorkflowFile.Arguments>
                                              </ui:InvokeWorkflowFile>
                                            </TryCatch.Try>
                                            <TryCatch.Catches>
                                              <Catch x:TypeArguments="s:Exception" sap2010:WorkflowViewState.IdRef="Catch`1_17">
                                                <ActivityAction x:TypeArguments="s:Exception">
                                                  <ActivityAction.Argument>
                                                    <DelegateInArgument x:TypeArguments="s:Exception" Name="exception" />
                                                  </ActivityAction.Argument>
                                                  <ui:LogMessage DisplayName="Log message" sap2010:WorkflowViewState.IdRef="LogMessage_44" Level="Warn" Message="[&quot;KillAllProcesses failed. &quot;+exception.Message+&quot; at Source: &quot;+exception.Source]" />
                                                </ActivityAction>
                                              </Catch>
                                            </TryCatch.Catches>
                                          </TryCatch>
                                        </Sequence>
                                      </ActivityAction>
                                    </Catch>
                                  </TryCatch.Catches>
                                </TryCatch>
                              </Sequence>
                            </Transition.Action>
                            <Transition.Condition>[SystemError IsNot Nothing]</Transition.Condition>
                          </Transition>
                          <Transition sap2010:Annotation.AnnotationText="No need for any action here, in case of success simply go to next transaction" DisplayName="Success" sap2010:WorkflowViewState.IdRef="Transition_12" To="{x:Reference __ReferenceID0}">
                            <Transition.Action>
                              <Sequence sap2010:Annotation.AnnotationText="This transition is the default one and it should be the last in the transitions list. It will be picked up if none of the transitions above in the list is triggered.&#xA;" DisplayName="Success" sap2010:WorkflowViewState.IdRef="Sequence_42">
                                <ui:RetryScope sap2010:Annotation.AnnotationText="Set Transaction status Activity timeout increased to 60 sec and it will be retried three times" DisplayName="Retry Scope" sap2010:WorkflowViewState.IdRef="RetryScope_3" NumberOfRetries="3" RetryInterval="00:00:05">
                                  <ui:RetryScope.ActivityBody>
                                    <ActivityAction>
                                      <Sequence DisplayName="Action" sap2010:WorkflowViewState.IdRef="Sequence_79">
                                        <ui:SetTransactionStatus ContinueOnError="{x:Null}" Reason="{x:Null}" ServiceBaseAddress="{x:Null}" sap2010:Annotation.AnnotationText="Successful" DisplayName="Set transaction status" ErrorType="Application" sap2010:WorkflowViewState.IdRef="SetTransactionStatus_5" Status="Successful" TimeoutMS="60000" TransactionItem="[TransactionItem]">
                                          <ui:SetTransactionStatus.Output>
                                            <scg:Dictionary x:TypeArguments="x:String, InArgument" />
                                          </ui:SetTransactionStatus.Output>
                                        </ui:SetTransactionStatus>
                                      </Sequence>
                                    </ActivityAction>
                                  </ui:RetryScope.ActivityBody>
                                  <ui:RetryScope.Condition>
                                    <ActivityFunc x:TypeArguments="x:Boolean" />
                                  </ui:RetryScope.Condition>
                                </ui:RetryScope>
                                <ui:CommentOut sap2010:Annotation.AnnotationText="Removed due to confusing with Standard Logging." DisplayName="Comment out" sap2010:WorkflowViewState.IdRef="CommentOut_5">
                                  <ui:CommentOut.Body>
                                    <Sequence DisplayName="Ignored Activities" sap2010:WorkflowViewState.IdRef="Sequence_71">
                                      <ui:AddLogFields DisplayName="Add Transaction log fields" sap2010:WorkflowViewState.IdRef="AddLogFields_7">
                                        <ui:AddLogFields.Fields>
                                          <InArgument x:TypeArguments="x:String" x:Key="TransactionStatus">Success</InArgument>
                                          <InArgument x:TypeArguments="x:String" x:Key="TransactionNumber">[TransactionNumber.ToString]</InArgument>
                                          <InArgument x:TypeArguments="x:String" x:Key="TransactionID" />
                                          <InArgument x:TypeArguments="x:String" x:Key="TransactionField1" />
                                          <InArgument x:TypeArguments="x:String" x:Key="TransactionField2" />
                                        </ui:AddLogFields.Fields>
                                      </ui:AddLogFields>
                                    </Sequence>
                                  </ui:CommentOut.Body>
                                </ui:CommentOut>
                                <ui:LogMessage DisplayName="Log Message" sap2010:WorkflowViewState.IdRef="LogMessage_38" Level="Info" Message="[Config(&quot;LogMessage_Success&quot;).ToString]" />
                                <ui:CommentOut sap2010:Annotation.AnnotationText="Removed due to confusing with Standard Logging." DisplayName="Comment out" sap2010:WorkflowViewState.IdRef="CommentOut_6">
                                  <ui:CommentOut.Body>
                                    <Sequence DisplayName="Ignored Activities" sap2010:WorkflowViewState.IdRef="Sequence_72">
                                      <ui:RemoveLogFields DisplayName="Remove Transaction log fields" sap2010:WorkflowViewState.IdRef="RemoveLogFields_5">
                                        <ui:RemoveLogFields.Fields>
                                          <scg:List x:TypeArguments="InArgument(x:String)" Capacity="8">
                                            <InArgument x:TypeArguments="x:String">TransactionStatus</InArgument>
                                            <InArgument x:TypeArguments="x:String">TransactionNumber</InArgument>
                                            <InArgument x:TypeArguments="x:String">TransactionID</InArgument>
                                            <InArgument x:TypeArguments="x:String">TransactionField1</InArgument>
                                            <InArgument x:TypeArguments="x:String">TransactionField2</InArgument>
                                          </scg:List>
                                        </ui:RemoveLogFields.Fields>
                                      </ui:RemoveLogFields>
                                    </Sequence>
                                  </ui:CommentOut.Body>
                                </ui:CommentOut>
                                <Assign sap2010:WorkflowViewState.IdRef="Assign_51">
                                  <Assign.To>
                                    <OutArgument x:TypeArguments="x:Int32">[TransactionNumber]</OutArgument>
                                  </Assign.To>
                                  <Assign.Value>
                                    <InArgument x:TypeArguments="x:Int32">[TransactionNumber+1]</InArgument>
                                  </Assign.Value>
                                </Assign>
                                <Assign sap2010:WorkflowViewState.IdRef="Assign_52">
                                  <Assign.To>
                                    <OutArgument x:TypeArguments="x:Int32">[RetryNumber]</OutArgument>
                                  </Assign.To>
                                  <Assign.Value>
                                    <InArgument x:TypeArguments="x:Int32">0</InArgument>
                                  </Assign.Value>
                                </Assign>
                              </Sequence>
                            </Transition.Action>
                            <Transition.Condition>True</Transition.Condition>
                          </Transition>
                        </State.Transitions>
                      </State>
                    </Transition.To>
                    <Transition.Action>
                      <Sequence sap2010:WorkflowViewState.IdRef="Sequence_76">
                        <Assign sap2010:WorkflowViewState.IdRef="Assign_101">
                          <Assign.To>
                            <OutArgument x:TypeArguments="x:Boolean">[dataLoaded]</OutArgument>
                          </Assign.To>
                          <Assign.Value>
                            <InArgument x:TypeArguments="x:Boolean">True</InArgument>
                          </Assign.Value>
                        </Assign>
                        <ui:LogMessage DisplayName="Log message" sap2010:WorkflowViewState.IdRef="LogMessage_45" Level="Info" Message="[Config(&quot;LogMessage_GetTransactionData&quot;).ToString+TransactionNumber.ToString]" />
                      </Sequence>
                    </Transition.Action>
                    <Transition.Condition>[TransactionItem IsNot Nothing]</Transition.Condition>
                  </Transition>
                  <Transition DisplayName="Finished Processing" sap2010:WorkflowViewState.IdRef="Transition_19" To="{x:Reference __ReferenceID2}">
                    <Transition.Action>
                      <ui:LogMessage DisplayName="Log message" sap2010:WorkflowViewState.IdRef="LogMessage_53" Level="Info" Message="[&quot;Process finished due to no more transaction data&quot;]" />
                    </Transition.Action>
                    <Transition.Condition>[dataLoaded And TransactionItem Is Nothing]</Transition.Condition>
                  </Transition>
                  <Transition sap2010:Annotation.AnnotationText="This is a simple mecanism to stop the process.&#xA;In reallife scenario you can stop the process when there is no more data to process or on a schedule." DisplayName="No Data" sap2010:WorkflowViewState.IdRef="Transition_15">
                    <Transition.To>
                      <State x:Name="__ReferenceID4" sap2010:Annotation.AnnotationText="Load transaction input data" DisplayName="Load Transaction Data" sap2010:WorkflowViewState.IdRef="State_9">
                        <State.Entry>
                          <Sequence sap2010:Annotation.AnnotationText="" DisplayName="Load Data" sap2010:WorkflowViewState.IdRef="Sequence_75">
                            <ui:ShouldStop DisplayName="Check Stop Signal" sap2010:WorkflowViewState.IdRef="ShouldStop_6" Result="[ShouldStop]" />
                            <Assign sap2010:WorkflowViewState.IdRef="Assign_100">
                              <Assign.To>
                                <OutArgument x:TypeArguments="x:Boolean">[dataLoaded]</OutArgument>
                              </Assign.To>
                              <Assign.Value>
                                <InArgument x:TypeArguments="x:Boolean">True</InArgument>
                              </Assign.Value>
                            </Assign>
                            <If Condition="[ShouldStop]" DisplayName="Should Stop or Get Next" sap2010:WorkflowViewState.IdRef="If_31">
                              <If.Then>
                                <ui:LogMessage DisplayName="Log Stop message" sap2010:WorkflowViewState.IdRef="LogMessage_51" Level="Info" Message="[&quot;Stop process requested&quot;]" />
                              </If.Then>
                              <If.Else>
                                <TryCatch DisplayName="Try LoadTransactionData" sap2010:WorkflowViewState.IdRef="TryCatch_19">
                                  <TryCatch.Try>
                                    <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" DisplayName="Invoke LoadTransactionData workflow" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_39" UnSafe="False" WorkflowFileName="Framework\LoadTransactionData.xaml">
                                      <ui:InvokeWorkflowFile.Arguments>
                                        <InArgument x:TypeArguments="scg:Dictionary(x:String, x:Object)" x:Key="in_Config">[Config]</InArgument>
                                        <InArgument x:TypeArguments="scg:Dictionary(x:String, ss:SecureString)" x:Key="in_Passwords">[Passwords]</InArgument>
                                      </ui:InvokeWorkflowFile.Arguments>
                                    </ui:InvokeWorkflowFile>
                                  </TryCatch.Try>
                                  <TryCatch.Catches>
                                    <Catch x:TypeArguments="s:Exception" sap2010:WorkflowViewState.IdRef="Catch`1_20">
                                      <ActivityAction x:TypeArguments="s:Exception">
                                        <ActivityAction.Argument>
                                          <DelegateInArgument x:TypeArguments="s:Exception" Name="exception" />
                                        </ActivityAction.Argument>
                                        <Sequence sap2010:WorkflowViewState.IdRef="Sequence_74">
                                          <ui:LogMessage DisplayName="Log message" sap2010:WorkflowViewState.IdRef="LogMessage_52" Level="Error" Message="[Config(&quot;LogMessage_LoadTransactionDataError&quot;).ToString+TransactionNumber.ToString+&quot;. &quot;+exception.Message+&quot; at Source: &quot;+exception.Source]" />
                                          <Assign DisplayName="Set transaction status to SystemError" sap2010:WorkflowViewState.IdRef="Assign_98">
                                            <Assign.To>
                                              <OutArgument x:TypeArguments="s:Exception">[QueueError]</OutArgument>
                                            </Assign.To>
                                            <Assign.Value>
                                              <InArgument x:TypeArguments="s:Exception">[exception]</InArgument>
                                            </Assign.Value>
                                          </Assign>
                                          <Assign DisplayName="Set processError to SystemError" sap2010:WorkflowViewState.IdRef="Assign_99">
                                            <Assign.To>
                                              <OutArgument x:TypeArguments="s:Exception">[processError]</OutArgument>
                                            </Assign.To>
                                            <Assign.Value>
                                              <InArgument x:TypeArguments="s:Exception">[exception]</InArgument>
                                            </Assign.Value>
                                          </Assign>
                                        </Sequence>
                                      </ActivityAction>
                                    </Catch>
                                  </TryCatch.Catches>
                                </TryCatch>
                              </If.Else>
                            </If>
                          </Sequence>
                        </State.Entry>
                        <State.Transitions>
                          <Transition DisplayName="Exception" sap2010:WorkflowViewState.IdRef="Transition_17" To="{x:Reference __ReferenceID2}">
                            <Transition.Action>
                              <ui:LogMessage DisplayName="Log Message" sap2010:WorkflowViewState.IdRef="LogMessage_48" Level="Warn" Message="[&quot;System error at initialization: &quot; + QueueError.Message]" />
                            </Transition.Action>
                            <Transition.Condition>[QueueError IsNot Nothing]</Transition.Condition>
                          </Transition>
                          <Transition DisplayName="Success" sap2010:WorkflowViewState.IdRef="Transition_16" To="{x:Reference __ReferenceID0}" Condition="[QueueError Is Nothing]" />
                        </State.Transitions>
                      </State>
                    </Transition.To>
                    <Transition.Action>
                      <ui:LogMessage DisplayName="Log message" sap2010:WorkflowViewState.IdRef="LogMessage_54" Level="Info" Message="[&quot;No data found to process; moving to Load Transaction Data&quot;]" />
                    </Transition.Action>
                    <Transition.Condition>[TransactionItem Is Nothing]</Transition.Condition>
                  </Transition>
                </State.Transitions>
              </State>
            </Transition.To>
            <Transition.Action>
              <ui:Comment sap2010:WorkflowViewState.IdRef="Comment_2" Text="Default transition is picked up if there are no errors during initialization" />
            </Transition.Action>
            <Transition.Condition>[SystemError is Nothing]</Transition.Condition>
          </Transition>
        </State.Transitions>
      </State>
    </StateMachine.InitialState>
    <x:Reference>__ReferenceID0</x:Reference>
    <x:Reference>__ReferenceID3</x:Reference>
    <x:Reference>__ReferenceID2</x:Reference>
    <x:Reference>__ReferenceID1</x:Reference>
    <x:Reference>__ReferenceID4</x:Reference>
    <StateMachine.Variables>
      <Variable x:TypeArguments="ui:QueueItem" Name="TransactionItem" />
      <Variable x:TypeArguments="s:Exception" Name="SystemError" />
      <Variable x:TypeArguments="ui:BusinessRuleException" Name="BusinessRuleException" />
      <Variable x:TypeArguments="x:Int32" Default="1" Name="TransactionNumber" />
      <Variable x:TypeArguments="scg:Dictionary(x:String, x:Object)" Name="Config" />
      <Variable x:TypeArguments="x:Int32" Default="0" Name="RetryNumber" />
      <Variable x:TypeArguments="s:Exception" Name="QueueError" />
      <Variable x:TypeArguments="x:String" Name="projectId" />
      <Variable x:TypeArguments="x:String" Name="projectName" />
      <Variable x:TypeArguments="s:DateTime" Name="processStartTime" />
      <Variable x:TypeArguments="s:Exception" Name="processError" />
      <Variable x:TypeArguments="x:String" Name="processSummary" />
      <Variable x:TypeArguments="x:Boolean" Name="ShouldStop" />
      <Variable x:TypeArguments="x:String" Name="transactionName" />
      <Variable x:TypeArguments="x:String" Name="transactionId" />
      <Variable x:TypeArguments="s:DateTime" Name="transactionStartTime" />
      <Variable x:TypeArguments="s:Exception" Name="transactionError" />
      <Variable x:TypeArguments="x:Boolean" Default="False" Name="dataLoaded" />
      <Variable x:TypeArguments="x:String" Default="Application" Name="exceptionType" />
      <Variable x:TypeArguments="x:Int32" Default="0" Name="consecutiveExceptions" />
      <Variable x:TypeArguments="scg:Dictionary(x:String, ss:SecureString)" Name="Passwords" />
      <Variable x:TypeArguments="s:String[]" Default="[{&quot;iexplore&quot;, &quot;chrome&quot;, &quot;excel&quot;}]" Name="defaultKillList" />
    </StateMachine.Variables>
    <sads:DebugSymbol.Symbol>d0VEOlxWYW1zaV9Qcm9qZWN0c19Gb2xkZXJcVWlQYXRoXFVpUGF0aF9FbnRlcnByaXNlX0ZyYW1ld29ya1xNYWluLnhhbWzNAnwD0gcSAgEBvQczvQc2AwHpA78HM78HNgMB6APLBzXLBzwDAecDzAc0zAdBAwHmA80HM80HNgMB5QPPBzbPB3cDAeQDzAIPqgcXAwGlA5YDF8UGHwMBsgHcAQ/DAhcCAXF+B7IHDwIBMd4GF6IHHwIBAs4CE5EDHgMBuAPUBivUBkoDAbYDyAYX0gYiAwGtA9oGK9oGVgMBrAPYBhfYBsgBAwGqA6cHK6cHRwMBqQOlBxelB9EBAwGnA5gDG7gEJgMBwgLhBDPhBFgDAcACvQQf3wQqAwGrAvoFM/oFTgMBqQLlBB/4BSoDAcwBwgYzwgY3AwHLAf4FH8AGKgMBtAHeARPBAh4CAXOAAQvXARYCATzIAiPIAj4CATnGAg/GAscBAgE2rwcjrwc7AgE0rQcPrQedAQIBM+AGG5cHJgIBDJ4HM54HTQIBCZwHH5wH1QECAQagB5kBoAeyAQIBBM8CFc8CiwEDAeED0AIVkAMaAwG5A8kGGdAGIgMBsgPRBhnRBuMBAwGuA9gGhQHYBsUBAwGrA6UHhQGlB84BAwGoA5oDH90DKgMB9gKsBB+2BDcDAeYC5QMj/gMuAwHYAoYEI6cELgMBwwK+BCHNBDEDAbcCzgQhzgTzAQMBtQLPBCHWBCoDAbAC1wQh3gQqAwGsAuYEIfUEMQMBnwL2BCH2BPsCAwGeAvcEIbsFJgMB5wG8BSHPBSwDAd4B0AUh9wUsAwHNAf8FIY4GMQMBwwGPBiGdBjEDAcIBngYhngbFAQMBvwGfBiGvBjEDAb4BsAYhtwYqAwG5AbgGIb8GKgMBtQHgARfkAS8DAbAB+AEXvwIiAgF97AEb8wEmAgF0ggEPugEaAgFIwgET0wEeAgE9xgJ+xgLEAQIBN+EGHeEGkwECAS7iBh3pBiYCASrqBh2WByICAQ2cB40BnAfSAQIBB88Ces8CiAEDAeID0AIj0AI2AwG6A9ICGY4DHgMBvAPOBkXOBkkDAbUDywZGywZSAwGzA9EGhwHRBuABAwGvA5sDIcUDLAMBhwPGAyHNAyoDAYMDzgMh1AM5AwH7AtUDIdwDKgMB9wKxBGaxBHgDAfQCtARetAR6AwHyArIEXLIEegMB8AKwBGewBIYBAwHuAq4EYK4EeAMB7AKvBGKvBHMDAeoCswReswR+AwHoAqwE0AGsBPUBAwHnAuYDJe0DLgMB4QLuAyX1Ay4DAd0C9gMl/QMuAwHZAocEJY4ELgMB0wKPBCWWBC4DAc4ClwQlngQuAwHJAp8EJaYELgMBxAK+BJ4CvgSoAgMBvwK+BIwCvgSPAgMBvgLBBCfHBDIDAbgCzgSPAc4E8AEDAbYC1ARL1ARgAwGzAtEETNEEXwMBsQLcBEvcBEwDAa8C2QRM2QRZAwGtAuYEngLmBKgCAwGoAuYEjALmBI8CAwGnAukEJ+8EMgMBoAL3BC/3BGADAegB+QQlpAUqAwH6AacFJbkFMAMB6gG+BSXDBT0DAeMBywUpywWJAgMB3wHSBSXWBT0DAdwB3gUp8wU0AwHOAf8FngL/BagCAwHKAf8FjAL/BY8CAwHJAYIGJ4gGMgMBxAGeBo8BngbCAQMBwAG1Bku1BmADAbwBsgZMsgZfAwG6Ab0GS70GTAMBuAG6Bky6BlkDAbYB4AHUAeAB+QEDAbEB+QEZsAIeAwGPAbECGb4CHgIBfu0BHe0BgQICAXnuAR3yATUCAXWDARGKARoCAW2LARGsARYCAVOtARG5ARYCAUnDARXKAR4CAUPLARXSAR4CAT7hBoIB4QaQAQIBL+cGSecGTQIBLeQGSuQGVgIBK+oGK+oGOQIBDuwGIewGvQECASjvBiGUBywCARDSAifSAjUDAb0D1AId4AIoAwHaA+MCHYwDKAMBvwOcAyOjAywDAaEDpAMjqwMsAwGcA6wDI7MDLAMBmAO0AyO7AywDAZQDvAMjxAM7AwGIA8sDXMsDZQMBhgPIA13IA3QDAYQD0gOCAdIDjQEDAYED0QN40QOAAQMB/wLQA2vQA3wDAf0CzgPcAc4D6gEDAfwC2gNL2gNMAwH6AtcDTNcDYwMB+ALrA2DrA2sDAeQC6ANh6AN4AwHiAvMDU/MDagMB4ALwA1TwA2IDAd4C+wNT+wNeAwHcAvgDVPgDZgMB2gKMBFOMBF4DAdYCiQRUiQRhAwHUApQEU5QEXgMB0QKRBFSRBGIDAc8CnARTnAReAwHMApkEVJkEZgMBygKkBE+kBGoDAccCoQRQoQRnAwHFAsIEKcYEQwMBuQLqBCnuBEMDAaEC+QQz+QRvAwH7AfsEKZUFNAMBigKYBSmiBTQDAf4BqAUnqAWgAgMB9QGpBSewBTADAfABsQUnuAUwAwHrAcAFYsAFjgEDAeUBvgXcAb4F+wEDAeQBywWXAcsFhgIDAeAB0gXiAdIFhwIDAd0B3wUr3wWFAgMB2AHgBSvyBTYDAc8BgwYphwZDAwHFAfkBJ/kBRQMBkAH7AR2uAigDAZIBsQInsQI/AgF/swIdvAI1AwGBAe0BiwHtAf4BAgF68AFh8AFyAgF37gHWAe4B9wECAXaIAT+IAUgCAXCFAUCFAU0CAW6LAR+LATQCAVSNARWqASACAVatAR+tAXkCAUqvARW0AS0CAU23ARW3Ae0BAgFLyAFDyAFOAgFGxQFExQFRAgFE0AFD0AFOAgFBzQFEzQFSAgE/7AaUAewGugECASnxBiX2Bj0CASL+BimQBzQCARHVAh/VArsBAwHfA9YCH94CKAMB2wPlAiH2AiwDAcsD/gIliAMwAwHAA6EDTqEDZQMBpAOeA0+eA14DAaIDqQNOqQNyAwGfA6YDT6YDYAMBnQOxA1CxA14DAZsDrgNRrgNnAwGZA7kDUbkDWgMBlwO2A1K2A2QDAZUDwQNgwQN+AwGSA8ADa8ADigEDAZADvgNkvgN8AwGOA78DZr8DdwMBjAPCA2LCA4IBAwGKA7wD1AG8A/gBAwGJA8IE6ALCBO8CAwG9AsIErALCBM0CAwG8AsIEgAPCBJMDAwG6AuoE3wLqBOYCAwGmAuoErQLqBMQCAwGkAuoE9wLqBIoDAwGiAvwEK/wE2gIDAZkC/QQrhAU0AwGUAoUFK4wFNAMBkAKNBSuUBTQDAYsCmQUroAU0AwGFAqEFK6EF5AIDAf8BqAWdAagFnQIDAfYBrgVRrgVmAwHzAasFUqsFZQMB8QG2BVW2BWIDAe4BswVWswVkAwHsAd8FmQHfBYICAwHZAeIFL+YFRwMB1AHuBTPuBYkCAwHQAYMG0AKDBtcCAwHIAYMG6AKDBvsCAwHGAfwBH4MCKAMBrAGEAh+tAiQDAZMBuAJhuAJ8AwGNAboCXroCbQMBiwG5Alq5AngDAYkBtwJftwJvAwGHAbYCYLYCbgMBhQG1Aly1AnwDAYMBswLKAbMC6gEDAYIBjgEXkgEpAgFrkwEXmgEvAgFjmwEXogEgAgFfowEXqQEvAgFXsgF2sgGBAQIBUbEBbLEBdAIBT68B0gGvAfYBAgFOtwFMtwHAAQIBTPQGhgH0BpEBAgEm8wZ88waEAQIBJPEG4QHxBoUCAgEj/wYr/wbHAgIBHIAHK4cHNAIBF4gHK48HNAIBEtUCkgHVArgBAwHgA9sCTtsCVwMB3gPYAk/YAmADAdwD5gIj7QIsAwHWA+4CI/UCOwMBzAP/Aif/AsICAwHFA4ADJ4cDMAMBwQP8BKoB/ATXAgMBmgKCBVWCBWoDAZcC/wRW/wRpAwGVAooFVYoFVgMBkwKHBVaHBWMDAZECkgVZkgVmAwGOAo8FWo8FaAMBjAKeBVWeBWQDAYgCmwVWmwVjAwGGAqEFqAGhBeECAwGAAuQFc+QFhAEDAdYB4gXoAeIFiQIDAdUB7gWhAe4FhgIDAdEBgQJKgQJVAwGvAf4BS/4BWgMBrQGEAi2EAnIDAZQBhgIjqwIuAwGVAZABVpABbwIBbJgBepgBhQECAWmXAXCXAXgCAWeTAc8BkwHvAQIBZpYBXJYBdwIBZZUBWJUBaAIBZKABRKABUgIBYp0BRZ0BVwIBYKYBW6YBdgIBXacBVKcBcgIBW6UBVqUBdgIBWaMBwwGjAeMBAgFY/waaAf8GxAICAR2FB1mFB2QCARqCB1qCB2YCARiNB1mNB2QCARWKB1qKB2gCARPrAlHrAloDAdkD6AJS6AJeAwHXA/MChAHzAo8BAwHUA/ICb/ICgAEDAdID8AJq8AJ9AwHQA/ECevECggEDAc4D7gLeAe4CgQIDAc0D/wKWAf8CvwIDAcYDhQNWhQNfAwHEA4IDV4IDaAMBwgOHAiWiAjADAZoBowIlqgIuAwGWAYgCJ48CMAMBqAGQAiehAjIDAZsBqAJTqAJcAwGZAaUCVKUCYgMBlwGNAlKNAlwDAasBigJTigJiAwGpAZECKaACLgMBnAGRAjeRAmQDAZ0BkwItngIyAwGfAZMCO5MCvAEDAaABlQIxnAI6AwGjAZoCXJoCgQEDAaYBlwJdlwJsAwGkAQ==</sads:DebugSymbol.Symbol>
  </StateMachine>
  <sap2010:WorkflowViewState.ViewStateManager>
    <sap2010:ViewStateManager>
      <sap2010:ViewStateData Id="Assign_37" sap:VirtualizedContainerService.HintSize="539,60" />
      <sap2010:ViewStateData Id="AddLogFields_5" sap:VirtualizedContainerService.HintSize="314,22" />
      <sap2010:ViewStateData Id="InvokeWorkflowFile_23" sap:VirtualizedContainerService.HintSize="314,87" />
      <sap2010:ViewStateData Id="Assign_38" sap:VirtualizedContainerService.HintSize="314,60" />
      <sap2010:ViewStateData Id="InvokeWorkflowFile_25" sap:VirtualizedContainerService.HintSize="314,87" />
      <sap2010:ViewStateData Id="Sequence_27" sap:VirtualizedContainerService.HintSize="336,500">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="If_11" sap:VirtualizedContainerService.HintSize="539,648">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="InvokeWorkflowFile_24" sap:VirtualizedContainerService.HintSize="314,87" />
      <sap2010:ViewStateData Id="Throw_1" sap:VirtualizedContainerService.HintSize="200,22" />
      <sap2010:ViewStateData Id="If_28" sap:VirtualizedContainerService.HintSize="539,235" />
      <sap2010:ViewStateData Id="Sequence_28" sap:VirtualizedContainerService.HintSize="561,1147">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Assign_39" sap:VirtualizedContainerService.HintSize="242,60" />
      <sap2010:ViewStateData Id="Assign_69" sap:VirtualizedContainerService.HintSize="242,60" />
      <sap2010:ViewStateData Id="Sequence_29" sap:VirtualizedContainerService.HintSize="264,284">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Catch`1_10" sap:VirtualizedContainerService.HintSize="565,353">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="TryCatch_10" sap:VirtualizedContainerService.HintSize="579,1810">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="InvokeWorkflowFile_26" sap:VirtualizedContainerService.HintSize="314,87" />
      <sap2010:ViewStateData Id="LogMessage_30" sap:VirtualizedContainerService.HintSize="314,91" />
      <sap2010:ViewStateData Id="InvokeWorkflowFile_27" sap:VirtualizedContainerService.HintSize="314,87" />
      <sap2010:ViewStateData Id="Sequence_30" sap:VirtualizedContainerService.HintSize="336,342">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Catch`1_11" sap:VirtualizedContainerService.HintSize="953,411">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Assign_87" sap:VirtualizedContainerService.HintSize="780,60" />
      <sap2010:ViewStateData Id="Assign_86" sap:VirtualizedContainerService.HintSize="611,60" />
      <sap2010:ViewStateData Id="Assign_85" sap:VirtualizedContainerService.HintSize="242,60" />
      <sap2010:ViewStateData Id="If_26" sap:VirtualizedContainerService.HintSize="464,208" />
      <sap2010:ViewStateData Id="If_16" sap:VirtualizedContainerService.HintSize="589,356" />
      <sap2010:ViewStateData Id="Sequence_59" sap:VirtualizedContainerService.HintSize="611,480">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Sequence_60" sap:VirtualizedContainerService.HintSize="633,704">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Assign_97" sap:VirtualizedContainerService.HintSize="633,117">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Sequence_66" sap:VirtualizedContainerService.HintSize="655,985">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="If_27" sap:VirtualizedContainerService.HintSize="780,1133" />
      <sap2010:ViewStateData Id="Sequence_58" sap:VirtualizedContainerService.HintSize="802,1357">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="If_15" sap:VirtualizedContainerService.HintSize="927,1505" />
      <sap2010:ViewStateData Id="InvokeWorkflowFile_28" sap:VirtualizedContainerService.HintSize="314,87" />
      <sap2010:ViewStateData Id="If_29" sap:VirtualizedContainerService.HintSize="927,235" />
      <sap2010:ViewStateData Id="Sequence_47" sap:VirtualizedContainerService.HintSize="949,1904">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="TryCatch_11" sap:VirtualizedContainerService.HintSize="967,2652" />
      <sap2010:ViewStateData Id="State_6" sap:VirtualizedContainerService.HintSize="124,107.333333333333">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <av:Point x:Key="ShapeLocation">228,168</av:Point>
            <av:Size x:Key="ShapeSize">124,107.333333333333</av:Size>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
            <x:Double x:Key="StateContainerWidth">110</x:Double>
            <x:Double x:Key="StateContainerHeight">26</x:Double>
            <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="LogMessage_31" sap:VirtualizedContainerService.HintSize="314,91" />
      <sap2010:ViewStateData Id="Transition_10" sap:VirtualizedContainerService.HintSize="430,796">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <av:PointCollection x:Key="ConnectorLocation">391.5,100 391.5,130 283.8,130 283.8,168</av:PointCollection>
            <x:Int32 x:Key="SrcConnectionPointIndex">39</x:Int32>
            <x:Int32 x:Key="DestConnectionPointIndex">34</x:Int32>
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="ShouldStop_4" sap:VirtualizedContainerService.HintSize="906.666666666667,22" />
      <sap2010:ViewStateData Id="LogMessage_35" sap:VirtualizedContainerService.HintSize="314,94.6666666666667" />
      <sap2010:ViewStateData Id="Assign_108" sap:VirtualizedContainerService.HintSize="314,62" />
      <sap2010:ViewStateData Id="Sequence_83" sap:VirtualizedContainerService.HintSize="336,320.666666666667">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Assign_60" sap:VirtualizedContainerService.HintSize="314,62" />
      <sap2010:ViewStateData Id="InvokeWorkflowFile_30" sap:VirtualizedContainerService.HintSize="314,86.6666666666667" />
      <sap2010:ViewStateData Id="Sequence_36" sap:VirtualizedContainerService.HintSize="336,312.666666666667">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="LogMessage_36" sap:VirtualizedContainerService.HintSize="314,94.6666666666667" />
      <sap2010:ViewStateData Id="Assign_42" sap:VirtualizedContainerService.HintSize="314,62" />
      <sap2010:ViewStateData Id="Sequence_37" sap:VirtualizedContainerService.HintSize="336,320.666666666667">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Catch`1_13" sap:VirtualizedContainerService.HintSize="404.666666666667,391.333333333333">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="TryCatch_13" sap:VirtualizedContainerService.HintSize="418.666666666667,1024">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="If_14" sap:VirtualizedContainerService.HintSize="780.666666666667,1178" />
      <sap2010:ViewStateData Id="If_34" sap:VirtualizedContainerService.HintSize="906.666666666667,1332" />
      <sap2010:ViewStateData Id="Sequence_38" sap:VirtualizedContainerService.HintSize="928.666666666667,1580">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Assign_43" sap:VirtualizedContainerService.HintSize="314,60" />
      <sap2010:ViewStateData Id="Assign_44" sap:VirtualizedContainerService.HintSize="314,60" />
      <sap2010:ViewStateData Id="Assign_45" sap:VirtualizedContainerService.HintSize="314,60" />
      <sap2010:ViewStateData Id="Assign_96" sap:VirtualizedContainerService.HintSize="314,60" />
      <sap2010:ViewStateData Id="InvokeWorkflowFile_31" sap:VirtualizedContainerService.HintSize="314,87" />
      <sap2010:ViewStateData Id="Sequence_39" sap:VirtualizedContainerService.HintSize="336,611">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Assign_46" sap:VirtualizedContainerService.HintSize="336,60" />
      <sap2010:ViewStateData Id="InvokeWorkflowFile_32" sap:VirtualizedContainerService.HintSize="336,87" />
      <sap2010:ViewStateData Id="Assign_88" sap:VirtualizedContainerService.HintSize="336,60" />
      <sap2010:ViewStateData Id="Sequence_40" sap:VirtualizedContainerService.HintSize="358,1062">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Assign_47" sap:VirtualizedContainerService.HintSize="242,60" />
      <sap2010:ViewStateData Id="Assign_91" sap:VirtualizedContainerService.HintSize="242,60" />
      <sap2010:ViewStateData Id="Assign_66" sap:VirtualizedContainerService.HintSize="242,60" />
      <sap2010:ViewStateData Id="Sequence_49" sap:VirtualizedContainerService.HintSize="264,384">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Catch`1_14" sap:VirtualizedContainerService.HintSize="404,453">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Assign_48" sap:VirtualizedContainerService.HintSize="242,60" />
      <sap2010:ViewStateData Id="Assign_92" sap:VirtualizedContainerService.HintSize="242,60" />
      <sap2010:ViewStateData Id="Assign_67" sap:VirtualizedContainerService.HintSize="242,60" />
      <sap2010:ViewStateData Id="Assign_89" sap:VirtualizedContainerService.HintSize="242,60" />
      <sap2010:ViewStateData Id="Sequence_50" sap:VirtualizedContainerService.HintSize="264,484">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Catch`1_15" sap:VirtualizedContainerService.HintSize="404,553">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="InvokeWorkflowFile_33" sap:VirtualizedContainerService.HintSize="314,87" />
      <sap2010:ViewStateData Id="TryCatch_14" sap:VirtualizedContainerService.HintSize="418,2406">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="SetTransactionStatus_4" sap:VirtualizedContainerService.HintSize="200,49">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Sequence_77" sap:VirtualizedContainerService.HintSize="222,173">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="RetryScope_1" sap:VirtualizedContainerService.HintSize="314,389">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="LogMessage_37" sap:VirtualizedContainerService.HintSize="314,91" />
      <sap2010:ViewStateData Id="Assign_49" sap:VirtualizedContainerService.HintSize="314,60" />
      <sap2010:ViewStateData Id="Assign_50" sap:VirtualizedContainerService.HintSize="314,60" />
      <sap2010:ViewStateData Id="Sequence_41" sap:VirtualizedContainerService.HintSize="336,886">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
            <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Transition_11" sap:VirtualizedContainerService.HintSize="430,1281">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <av:PointCollection x:Key="ConnectorLocation">359.6,657.666666666667 359.6,671.1 595.833333333333,671.1 595.833333333333,371.1 565.833333333333,371.1</av:PointCollection>
            <x:Int32 x:Key="SrcConnectionPointIndex">35</x:Int32>
            <x:Int32 x:Key="DestConnectionPointIndex">20</x:Int32>
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="SetTransactionStatus_6" sap:VirtualizedContainerService.HintSize="200,49">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Sequence_78" sap:VirtualizedContainerService.HintSize="222,173">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="RetryScope_2" sap:VirtualizedContainerService.HintSize="1058,389">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Comment_3" sap:VirtualizedContainerService.HintSize="1058,169" />
      <sap2010:ViewStateData Id="LogMessage_55" sap:VirtualizedContainerService.HintSize="314,91">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Assign_102" sap:VirtualizedContainerService.HintSize="314,60" />
      <sap2010:ViewStateData Id="Assign_103" sap:VirtualizedContainerService.HintSize="314,60" />
      <sap2010:ViewStateData Id="Assign_104" sap:VirtualizedContainerService.HintSize="314,60" />
      <sap2010:ViewStateData Id="Sequence_80" sap:VirtualizedContainerService.HintSize="336,515">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Assign_105" sap:VirtualizedContainerService.HintSize="314,60" />
      <sap2010:ViewStateData Id="LogMessage_56" sap:VirtualizedContainerService.HintSize="314,91" />
      <sap2010:ViewStateData Id="Sequence_81" sap:VirtualizedContainerService.HintSize="336,315">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="If_32" sap:VirtualizedContainerService.HintSize="697,663" />
      <sap2010:ViewStateData Id="LogMessage_57" sap:VirtualizedContainerService.HintSize="314,91" />
      <sap2010:ViewStateData Id="Assign_106" sap:VirtualizedContainerService.HintSize="314,60" />
      <sap2010:ViewStateData Id="Assign_107" sap:VirtualizedContainerService.HintSize="314,60" />
      <sap2010:ViewStateData Id="Sequence_82" sap:VirtualizedContainerService.HintSize="336,415">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="If_33" sap:VirtualizedContainerService.HintSize="1058,811" />
      <sap2010:ViewStateData Id="InvokeWorkflowFile_34" sap:VirtualizedContainerService.HintSize="314,87" />
      <sap2010:ViewStateData Id="LogMessage_42" sap:VirtualizedContainerService.HintSize="314,91" />
      <sap2010:ViewStateData Id="Catch`1_16" sap:VirtualizedContainerService.HintSize="404,160">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="TryCatch_15" sap:VirtualizedContainerService.HintSize="1058,557">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="InvokeWorkflowFile_35" sap:VirtualizedContainerService.HintSize="314,87" />
      <sap2010:ViewStateData Id="LogMessage_43" sap:VirtualizedContainerService.HintSize="418,91" />
      <sap2010:ViewStateData Id="InvokeWorkflowFile_36" sap:VirtualizedContainerService.HintSize="314,87" />
      <sap2010:ViewStateData Id="LogMessage_44" sap:VirtualizedContainerService.HintSize="314,91" />
      <sap2010:ViewStateData Id="Catch`1_17" sap:VirtualizedContainerService.HintSize="404,160">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="TryCatch_16" sap:VirtualizedContainerService.HintSize="418,557">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Sequence_43" sap:VirtualizedContainerService.HintSize="440,812">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Catch`1_18" sap:VirtualizedContainerService.HintSize="446,881">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="TryCatch_17" sap:VirtualizedContainerService.HintSize="1058,1278">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Sequence_44" sap:VirtualizedContainerService.HintSize="1080,3515">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
            <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Transition_13" sap:VirtualizedContainerService.HintSize="1163,3910">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <av:PointCollection x:Key="ConnectorLocation">380.733333333333,657.666666666667 380.733333333333,687.666666666667 590.733333333333,687.666666666667 590.733333333333,64 508.5,64</av:PointCollection>
            <x:Int32 x:Key="SrcConnectionPointIndex">43</x:Int32>
            <x:Int32 x:Key="DestConnectionPointIndex">44</x:Int32>
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="SetTransactionStatus_5" sap:VirtualizedContainerService.HintSize="200,49">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Sequence_79" sap:VirtualizedContainerService.HintSize="222,173">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="RetryScope_3" sap:VirtualizedContainerService.HintSize="314,389">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="AddLogFields_7" sap:VirtualizedContainerService.HintSize="200,22" />
      <sap2010:ViewStateData Id="Sequence_71" sap:VirtualizedContainerService.HintSize="222,146">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="CommentOut_5" sap:VirtualizedContainerService.HintSize="314,93">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="LogMessage_38" sap:VirtualizedContainerService.HintSize="314,91" />
      <sap2010:ViewStateData Id="RemoveLogFields_5" sap:VirtualizedContainerService.HintSize="200,22" />
      <sap2010:ViewStateData Id="Sequence_72" sap:VirtualizedContainerService.HintSize="222,146">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="CommentOut_6" sap:VirtualizedContainerService.HintSize="314,93">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Assign_51" sap:VirtualizedContainerService.HintSize="314,60" />
      <sap2010:ViewStateData Id="Assign_52" sap:VirtualizedContainerService.HintSize="314,60" />
      <sap2010:ViewStateData Id="Sequence_42" sap:VirtualizedContainerService.HintSize="336,1182">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Transition_12" sap:VirtualizedContainerService.HintSize="430,1619">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <av:PointCollection x:Key="ConnectorLocation">327.9,657.666666666667 327.9,680.566666666667 595.833333333333,680.566666666667 595.833333333333,410.566666666667 565.833333333333,410.566666666667</av:PointCollection>
            <x:Int32 x:Key="SrcConnectionPointIndex">23</x:Int32>
            <x:Int32 x:Key="DestConnectionPointIndex">52</x:Int32>
            <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="State_7" sap:VirtualizedContainerService.HintSize="211.333333333333,148.666666666667">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <av:Point x:Key="ShapeLocation">264.5,509</av:Point>
            <av:Size x:Key="ShapeSize">211.333333333333,148.666666666667</av:Size>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
            <x:Double x:Key="StateContainerWidth">197</x:Double>
            <x:Double x:Key="StateContainerHeight">34</x:Double>
            <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Assign_101" sap:VirtualizedContainerService.HintSize="314,60" />
      <sap2010:ViewStateData Id="LogMessage_45" sap:VirtualizedContainerService.HintSize="314,91" />
      <sap2010:ViewStateData Id="Sequence_76" sap:VirtualizedContainerService.HintSize="336,315">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Transition_14" sap:VirtualizedContainerService.HintSize="430,710">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <av:PointCollection x:Key="ConnectorLocation">484.866666666667,440.166666666667 484.866666666667,470.166666666667 380.366666666667,470.166666666667 380.366666666667,509</av:PointCollection>
            <x:Int32 x:Key="SrcConnectionPointIndex">51</x:Int32>
            <x:Int32 x:Key="DestConnectionPointIndex">42</x:Int32>
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="LogMessage_53" sap:VirtualizedContainerService.HintSize="314,91" />
      <sap2010:ViewStateData Id="Transition_19" sap:VirtualizedContainerService.HintSize="430,505">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <av:PointCollection x:Key="ConnectorLocation">403.7,341.5 403.7,227.033333333333 352,227.033333333333</av:PointCollection>
            <x:Int32 x:Key="SrcConnectionPointIndex">22</x:Int32>
            <x:Int32 x:Key="DestConnectionPointIndex">40</x:Int32>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="ShouldStop_6" sap:VirtualizedContainerService.HintSize="757,22" />
      <sap2010:ViewStateData Id="Assign_100" sap:VirtualizedContainerService.HintSize="757,60" />
      <sap2010:ViewStateData Id="LogMessage_51" sap:VirtualizedContainerService.HintSize="314,91" />
      <sap2010:ViewStateData Id="InvokeWorkflowFile_39" sap:VirtualizedContainerService.HintSize="314,87" />
      <sap2010:ViewStateData Id="LogMessage_52" sap:VirtualizedContainerService.HintSize="314,91" />
      <sap2010:ViewStateData Id="Assign_98" sap:VirtualizedContainerService.HintSize="314,60" />
      <sap2010:ViewStateData Id="Assign_99" sap:VirtualizedContainerService.HintSize="314,60" />
      <sap2010:ViewStateData Id="Sequence_74" sap:VirtualizedContainerService.HintSize="336,415">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Catch`1_20" sap:VirtualizedContainerService.HintSize="404,484">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="TryCatch_19" sap:VirtualizedContainerService.HintSize="418,881">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="If_31" sap:VirtualizedContainerService.HintSize="757,1029" />
      <sap2010:ViewStateData Id="Sequence_75" sap:VirtualizedContainerService.HintSize="779,1342">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="LogMessage_48" sap:VirtualizedContainerService.HintSize="314,91" />
      <sap2010:ViewStateData Id="Transition_17" sap:VirtualizedContainerService.HintSize="430,507">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <av:PointCollection x:Key="ConnectorLocation">67.5666666666667,341.5 67.5666666666667,232.4 228,232.4</av:PointCollection>
            <x:Int32 x:Key="SrcConnectionPointIndex">6</x:Int32>
            <x:Int32 x:Key="DestConnectionPointIndex">45</x:Int32>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Transition_16" sap:VirtualizedContainerService.HintSize="430,505">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <av:PointCollection x:Key="ConnectorLocation">240.85,341.5 240.85,311.5 369.15,311.5 369.15,341.5</av:PointCollection>
            <x:Int32 x:Key="SrcConnectionPointIndex">66</x:Int32>
            <x:Int32 x:Key="DestConnectionPointIndex">10</x:Int32>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="State_9" sap:VirtualizedContainerService.HintSize="231.333333333333,98.6666666666667">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <av:Point x:Key="ShapeLocation">44.5,341.5</av:Point>
            <av:Size x:Key="ShapeSize">231.333333333333,98.6666666666667</av:Size>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
            <x:Double x:Key="StateContainerWidth">217</x:Double>
            <x:Double x:Key="StateContainerHeight">34</x:Double>
            <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="LogMessage_54" sap:VirtualizedContainerService.HintSize="314,91" />
      <sap2010:ViewStateData Id="Transition_15" sap:VirtualizedContainerService.HintSize="430,562">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <av:PointCollection x:Key="ConnectorLocation">369.2,440.166666666667 369.2,470.166666666667 241.133333333333,470.166666666667 241.133333333333,440.166666666667</av:PointCollection>
            <x:Int32 x:Key="SrcConnectionPointIndex">11</x:Int32>
            <x:Int32 x:Key="DestConnectionPointIndex">67</x:Int32>
            <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="State_8" sap:VirtualizedContainerService.HintSize="955.333333333333,2038.66666666667">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <av:Point x:Key="ShapeLocation">334.5,341.5</av:Point>
            <av:Size x:Key="ShapeSize">231.333333333333,98.6666666666667</av:Size>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
            <x:Double x:Key="StateContainerWidth">217</x:Double>
            <x:Double x:Key="StateContainerHeight">34</x:Double>
            <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Comment_2" sap:VirtualizedContainerService.HintSize="314,74" />
      <sap2010:ViewStateData Id="Transition_18" sap:VirtualizedContainerService.HintSize="430,800">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Int32 x:Key="SrcConnectionPointIndex">39</x:Int32>
            <x:Int32 x:Key="DestConnectionPointIndex">50</x:Int32>
            <av:PointCollection x:Key="ConnectorLocation">391.5,100 391.5,130 484.433333333333,130 484.433333333333,341.5</av:PointCollection>
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="State_10" sap:VirtualizedContainerService.HintSize="234,90">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <av:Point x:Key="ShapeLocation">274.5,10</av:Point>
            <av:Size x:Key="ShapeSize">234,90</av:Size>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
            <x:Double x:Key="StateContainerWidth">220</x:Double>
            <x:Double x:Key="StateContainerHeight">25</x:Double>
            <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="StateMachine_2" sap:VirtualizedContainerService.HintSize="786,831.333333333333">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <av:Point x:Key="ShapeLocation">50,0</av:Point>
            <x:Double x:Key="StateContainerWidth">772</x:Double>
            <x:Double x:Key="StateContainerHeight">750</x:Double>
            <av:PointCollection x:Key="ConnectorLocation">110,41.25 140,41.25 140,40.8 274.5,40.8</av:PointCollection>
            <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Main_1" sap:VirtualizedContainerService.HintSize="826,951.333333333333">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="ShouldExpandAll">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
    </sap2010:ViewStateManager>
  </sap2010:WorkflowViewState.ViewStateManager>
</Activity>